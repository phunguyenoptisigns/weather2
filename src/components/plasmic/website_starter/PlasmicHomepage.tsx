// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: iusa6KJcXwjrhefXgCMsK3
// Component: YxQbqGb_dU

import * as React from "react";

import * as p from "@plasmicapp/react-web";
import * as ph from "@plasmicapp/react-web/lib/host";

import {
  hasVariant,
  classNames,
  wrapWithClassName,
  createPlasmicElementProxy,
  makeFragment,
  MultiChoiceArg,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  pick,
  omit,
  useTrigger,
  StrictProps,
  deriveRenderOpts,
  ensureGlobalVariants
} from "@plasmicapp/react-web";

import "@plasmicapp/react-web/lib/plasmic.css";

import projectcss from "./plasmic_website_starter.module.css"; // plasmic-import: iusa6KJcXwjrhefXgCMsK3/projectcss
import sty from "./PlasmicHomepage.module.css"; // plasmic-import: YxQbqGb_dU/css

import Group703Icon from "./icons/PlasmicIcon__Group703"; // plasmic-import: AKDHGOqcr9/icon
import VectorIcon from "./icons/PlasmicIcon__Vector"; // plasmic-import: WFcPajYaRY/icon
import Ellipse135Icon from "./icons/PlasmicIcon__Ellipse135"; // plasmic-import: oL24QNTvxp/icon
import Vector17Icon from "./icons/PlasmicIcon__Vector17"; // plasmic-import: kd_IZfGkf0/icon
import Ellipse136Icon from "./icons/PlasmicIcon__Ellipse136"; // plasmic-import: vpo_mXcTB-/icon
import Ellipse37Icon from "./icons/PlasmicIcon__Ellipse37"; // plasmic-import: IdVgXytOO0/icon
import Vector2Icon from "./icons/PlasmicIcon__Vector2"; // plasmic-import: UM1WeLViLX/icon
import Group17Icon from "./icons/PlasmicIcon__Group17"; // plasmic-import: 2RcZ71ubS5/icon
import Group35Icon from "./icons/PlasmicIcon__Group35"; // plasmic-import: g-D84t62FS/icon
import Star25Icon from "./icons/PlasmicIcon__Star25"; // plasmic-import: DdCn7_wvn-Z/icon
import Star26Icon from "./icons/PlasmicIcon__Star26"; // plasmic-import: M6mvv0J4zBD/icon
import Star29Icon from "./icons/PlasmicIcon__Star29"; // plasmic-import: jHePrM3s8-f/icon
import group1000003659OyBjOPkGcX from "./images/group1000003659.svg"; // plasmic-import: OYBjOPkGcX/picture
import group1000003660IcdWv49Gih from "./images/group1000003660.svg"; // plasmic-import: ICDWv49Gih/picture
import ellipse128RMjQKySxuj from "./images/ellipse128.svg"; // plasmic-import: RMjQKySxuj/picture
import ellipse36KZfgoZ2 from "./images/ellipse36.svg"; // plasmic-import: -K-_zfgoZ2/picture
import group1000003662EyW87TmoKkU from "./images/group1000003662.svg"; // plasmic-import: EyW87TMOKkU/picture
import aaaa1ZvJdqMChi4 from "./images/aaaa1.svg"; // plasmic-import: ZvJdqMChi4/picture
import aaaa12W8DDkZGazY from "./images/aaaa12.svg"; // plasmic-import: w8DDkZGazY/picture

createPlasmicElementProxy;

export type PlasmicHomepage__VariantMembers = {};
export type PlasmicHomepage__VariantsArgs = {};
type VariantPropType = keyof PlasmicHomepage__VariantsArgs;
export const PlasmicHomepage__VariantProps = new Array<VariantPropType>();

export type PlasmicHomepage__ArgsType = {};
type ArgPropType = keyof PlasmicHomepage__ArgsType;
export const PlasmicHomepage__ArgProps = new Array<ArgPropType>();

export type PlasmicHomepage__OverridesType = {
  root?: p.Flex<"div">;
  concept1Sunset?: p.Flex<"div">;
  frame1000003696?: p.Flex<"div">;
  component1?: p.Flex<"div">;
  frame1000003671?: p.Flex<"div">;
  frame1000003672?: p.Flex<"div">;
  frame1000003695?: p.Flex<"div">;
  frame1000003694?: p.Flex<"div">;
  frame1000003691?: p.Flex<"div">;
  frame1000003669?: p.Flex<"div">;
  frame1000003668?: p.Flex<"div">;
  frame1000003673?: p.Flex<"div">;
  frame1000003674?: p.Flex<"div">;
  frame1000003675?: p.Flex<"div">;
  frame1000003676?: p.Flex<"div">;
  frame1000003677?: p.Flex<"div">;
  frame1000003678?: p.Flex<"div">;
  frame1000003692?: p.Flex<"div">;
  frame1000003682?: p.Flex<"div">;
  frame1000003679?: p.Flex<"div">;
  frame1000003667?: p.Flex<"div">;
  frame1000003680?: p.Flex<"div">;
  _2?: p.Flex<"div">;
  todaysUvIndex?: p.Flex<"div">;
  frame1000003681?: p.Flex<"div">;
  group1000003667?: p.Flex<"div">;
  frame1000003683?: p.Flex<"div">;
  frame1000003684?: p.Flex<"div">;
  frame1000003690?: p.Flex<"div">;
  frame1000003693?: p.Flex<"div">;
  _212Kmh?: p.Flex<"div">;
  todaysWindSpeed?: p.Flex<"div">;
  group1000003668?: p.Flex<"div">;
  frame1000003697?: p.Flex<"div">;
  frame1000003698?: p.Flex<"div">;
  frame1000003699?: p.Flex<"div">;
  frame1000003700?: p.Flex<"div">;
  _310?: p.Flex<"div">;
  moderateQuality?: p.Flex<"div">;
  group716?: p.Flex<"div">;
  frame1000003701?: p.Flex<"div">;
  frame1000003702?: p.Flex<"div">;
  frame1000003703?: p.Flex<"div">;
  frame1000003704?: p.Flex<"div">;
  frame1000003705?: p.Flex<"div">;
  frame1000003706?: p.Flex<"div">;
  frame1000003707?: p.Flex<"div">;
  group1000003661?: p.Flex<"div">;
  frame1000003708?: p.Flex<"div">;
  frame1000003709?: p.Flex<"div">;
  group1000003660?: p.Flex<"div">;
  frame1000003710?: p.Flex<"div">;
  frame1000003711?: p.Flex<"div">;
  frame1000003712?: p.Flex<"div">;
  frame1000003689?: p.Flex<"div">;
  frame1000003688?: p.Flex<"div">;
  frame1000003687?: p.Flex<"div">;
  logo?: p.Flex<"div">;
  group1000003670?: p.Flex<"div">;
  image?: p.Flex<"div">;
  image2?: p.Flex<"div">;
  group1000003663?: p.Flex<"div">;
  image3?: p.Flex<"div">;
  image4?: p.Flex<"div">;
  frame1000003686?: p.Flex<"div">;
  group693?: p.Flex<"div">;
  frame1000003685?: p.Flex<"div">;
  group692?: p.Flex<"div">;
  frame1000003670?: p.Flex<"div">;
  group704?: p.Flex<"div">;
};

export interface DefaultHomepageProps {
  className?: string;
}

const __wrapUserFunction =
  globalThis.__PlasmicWrapUserFunction ?? ((loc, fn) => fn());
const __wrapUserPromise =
  globalThis.__PlasmicWrapUserPromise ??
  (async (loc, promise) => {
    return await promise;
  });

function PlasmicHomepage__RenderFunc(props: {
  variants: PlasmicHomepage__VariantsArgs;
  args: PlasmicHomepage__ArgsType;
  overrides: PlasmicHomepage__OverridesType;
  forNode?: string;
}) {
  const { variants, overrides, forNode } = props;

  const $ctx = ph.useDataEnv?.() || {};
  const args = React.useMemo(() => Object.assign({}, props.args), [props.args]);

  const $props = {
    ...args,
    ...variants
  };
  const refsRef = React.useRef({});
  const $refs = refsRef.current;

  const currentUser = p.useCurrentUser?.() || {};

  const [$queries, setDollarQueries] = React.useState({});

  return (
    <React.Fragment>
      <div className={projectcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            projectcss.plasmic_tokens,
            sty.root
          )}
        >
          <div
            data-plasmic-name={"concept1Sunset"}
            data-plasmic-override={overrides.concept1Sunset}
            className={classNames(projectcss.all, sty.concept1Sunset)}
          >
            <div
              data-plasmic-name={"frame1000003696"}
              data-plasmic-override={overrides.frame1000003696}
              className={classNames(projectcss.all, sty.frame1000003696)}
            >
              <div
                data-plasmic-name={"component1"}
                data-plasmic-override={overrides.component1}
                className={classNames(projectcss.all, sty.component1)}
              >
                <p.Stack
                  as={"div"}
                  data-plasmic-name={"frame1000003671"}
                  data-plasmic-override={overrides.frame1000003671}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.frame1000003671)}
                >
                  <p.Stack
                    as={"div"}
                    data-plasmic-name={"frame1000003672"}
                    data-plasmic-override={overrides.frame1000003672}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.frame1000003672)}
                  >
                    <Group703Icon
                      className={classNames(projectcss.all, sty.svg__gSva)}
                      role={"img"}
                    />

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text___612Qe
                      )}
                    >
                      {"10:40 AM"}
                    </div>
                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"frame1000003695"}
                      data-plasmic-override={overrides.frame1000003695}
                      hasGap={true}
                      className={classNames(
                        projectcss.all,
                        sty.frame1000003695
                      )}
                    >
                      <p.Stack
                        as={"div"}
                        data-plasmic-name={"frame1000003694"}
                        data-plasmic-override={overrides.frame1000003694}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.frame1000003694
                        )}
                      >
                        <p.Stack
                          as={"div"}
                          data-plasmic-name={"frame1000003691"}
                          data-plasmic-override={overrides.frame1000003691}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.frame1000003691
                          )}
                        >
                          <p.Stack
                            as={"div"}
                            data-plasmic-name={"frame1000003669"}
                            data-plasmic-override={overrides.frame1000003669}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              sty.frame1000003669
                            )}
                          >
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__xFqjZ
                              )}
                            >
                              {"Sunrise"}
                            </div>
                            <div
                              data-plasmic-name={"frame1000003668"}
                              data-plasmic-override={overrides.frame1000003668}
                              className={classNames(
                                projectcss.all,
                                sty.frame1000003668
                              )}
                            >
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__yhWcj
                                )}
                              >
                                {"7:31"}
                              </div>
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__qrYtt
                                )}
                              >
                                {"AM"}
                              </div>
                            </div>
                            <p.PlasmicImg
                              alt={""}
                              className={classNames(sty.img___6QEtd)}
                              displayHeight={"28.569px" as const}
                              displayMaxHeight={"none" as const}
                              displayMaxWidth={"100%" as const}
                              displayMinHeight={"0" as const}
                              displayMinWidth={"0" as const}
                              displayWidth={"35.291px" as const}
                              loading={"lazy" as const}
                              src={{
                                src: group1000003659OyBjOPkGcX,
                                fullWidth: 35.291,
                                fullHeight: 28.569,
                                aspectRatio: 1.241379
                              }}
                            />
                          </p.Stack>
                          <p.Stack
                            as={"div"}
                            data-plasmic-name={"frame1000003673"}
                            data-plasmic-override={overrides.frame1000003673}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              sty.frame1000003673
                            )}
                          >
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__de9E3
                              )}
                            >
                              {"Sunset"}
                            </div>
                            <div
                              data-plasmic-name={"frame1000003674"}
                              data-plasmic-override={overrides.frame1000003674}
                              className={classNames(
                                projectcss.all,
                                sty.frame1000003674
                              )}
                            >
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__xL448
                                )}
                              >
                                {"5:34"}
                              </div>
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__bRz99
                                )}
                              >
                                {"PM"}
                              </div>
                            </div>
                            <p.PlasmicImg
                              alt={""}
                              className={classNames(sty.img__fy7Dv)}
                              displayHeight={"33.236px" as const}
                              displayMaxHeight={"none" as const}
                              displayMaxWidth={"100%" as const}
                              displayMinHeight={"0" as const}
                              displayMinWidth={"0" as const}
                              displayWidth={"35.291px" as const}
                              loading={"lazy" as const}
                              src={{
                                src: group1000003660IcdWv49Gih,
                                fullWidth: 35.291,
                                fullHeight: 33.236,
                                aspectRatio: 1.058824
                              }}
                            />
                          </p.Stack>
                          <p.Stack
                            as={"div"}
                            data-plasmic-name={"frame1000003675"}
                            data-plasmic-override={overrides.frame1000003675}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              sty.frame1000003675
                            )}
                          >
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__j5W7Y
                              )}
                            >
                              {"Humidity"}
                            </div>
                            <VectorIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg__ayYmr
                              )}
                              role={"img"}
                            />

                            <div
                              data-plasmic-name={"frame1000003676"}
                              data-plasmic-override={overrides.frame1000003676}
                              className={classNames(
                                projectcss.all,
                                sty.frame1000003676
                              )}
                            >
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__tAXzO
                                )}
                              >
                                {"38%"}
                              </div>
                            </div>
                          </p.Stack>
                          <p.Stack
                            as={"div"}
                            data-plasmic-name={"frame1000003677"}
                            data-plasmic-override={overrides.frame1000003677}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              sty.frame1000003677
                            )}
                          >
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__lveX
                              )}
                            >
                              {"Rain"}
                            </div>
                            <VectorIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg__q2Tp
                              )}
                              role={"img"}
                            />

                            <div
                              data-plasmic-name={"frame1000003678"}
                              data-plasmic-override={overrides.frame1000003678}
                              className={classNames(
                                projectcss.all,
                                sty.frame1000003678
                              )}
                            >
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__fKObs
                                )}
                              >
                                {"2%"}
                              </div>
                            </div>
                          </p.Stack>
                        </p.Stack>
                        <p.Stack
                          as={"div"}
                          data-plasmic-name={"frame1000003692"}
                          data-plasmic-override={overrides.frame1000003692}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.frame1000003692
                          )}
                        >
                          <p.Stack
                            as={"div"}
                            data-plasmic-name={"frame1000003682"}
                            data-plasmic-override={overrides.frame1000003682}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              sty.frame1000003682
                            )}
                          >
                            <p.Stack
                              as={"div"}
                              data-plasmic-name={"frame1000003679"}
                              data-plasmic-override={overrides.frame1000003679}
                              hasGap={true}
                              className={classNames(
                                projectcss.all,
                                sty.frame1000003679
                              )}
                            >
                              <div
                                data-plasmic-name={"frame1000003667"}
                                data-plasmic-override={
                                  overrides.frame1000003667
                                }
                                className={classNames(
                                  projectcss.all,
                                  sty.frame1000003667
                                )}
                              >
                                <div
                                  className={classNames(
                                    projectcss.all,
                                    projectcss.__wab_text,
                                    sty.text__ccBqi
                                  )}
                                >
                                  {"UV Index"}
                                </div>
                              </div>
                              <div
                                data-plasmic-name={"frame1000003680"}
                                data-plasmic-override={
                                  overrides.frame1000003680
                                }
                                className={classNames(
                                  projectcss.all,
                                  sty.frame1000003680
                                )}
                              >
                                <div
                                  data-plasmic-name={"_2"}
                                  data-plasmic-override={overrides._2}
                                  className={classNames(projectcss.all, sty._2)}
                                >
                                  <div
                                    className={classNames(
                                      projectcss.all,
                                      projectcss.__wab_text,
                                      sty.text__n3E7F
                                    )}
                                  >
                                    {"2"}
                                  </div>
                                </div>
                                <div
                                  data-plasmic-name={"todaysUvIndex"}
                                  data-plasmic-override={
                                    overrides.todaysUvIndex
                                  }
                                  className={classNames(
                                    projectcss.all,
                                    sty.todaysUvIndex
                                  )}
                                >
                                  <div
                                    className={classNames(
                                      projectcss.all,
                                      projectcss.__wab_text,
                                      sty.text__k81Qb
                                    )}
                                  >
                                    {"Today\u2019s UV Index"}
                                  </div>
                                </div>
                              </div>
                            </p.Stack>
                            <p.Stack
                              as={"div"}
                              data-plasmic-name={"frame1000003681"}
                              data-plasmic-override={overrides.frame1000003681}
                              hasGap={true}
                              className={classNames(
                                projectcss.all,
                                sty.frame1000003681
                              )}
                            >
                              <div
                                data-plasmic-name={"group1000003667"}
                                data-plasmic-override={
                                  overrides.group1000003667
                                }
                                className={classNames(
                                  projectcss.all,
                                  sty.group1000003667
                                )}
                              >
                                <p.PlasmicImg
                                  alt={""}
                                  className={classNames(sty.img__uwNb5)}
                                  displayHeight={"84px" as const}
                                  displayMaxHeight={"none" as const}
                                  displayMaxWidth={"100%" as const}
                                  displayMinHeight={"0" as const}
                                  displayMinWidth={"0" as const}
                                  displayWidth={"104px" as const}
                                  loading={"lazy" as const}
                                  src={{
                                    src: ellipse128RMjQKySxuj,
                                    fullWidth: 104,
                                    fullHeight: 84,
                                    aspectRatio: 1.238095
                                  }}
                                />

                                <div
                                  className={classNames(
                                    projectcss.all,
                                    projectcss.__wab_text,
                                    sty.text___767LK
                                  )}
                                >
                                  {"Low"}
                                </div>
                              </div>
                            </p.Stack>
                          </p.Stack>
                          <p.Stack
                            as={"div"}
                            data-plasmic-name={"frame1000003683"}
                            data-plasmic-override={overrides.frame1000003683}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              sty.frame1000003683
                            )}
                          >
                            <p.Stack
                              as={"div"}
                              data-plasmic-name={"frame1000003684"}
                              data-plasmic-override={overrides.frame1000003684}
                              hasGap={true}
                              className={classNames(
                                projectcss.all,
                                sty.frame1000003684
                              )}
                            >
                              <div
                                data-plasmic-name={"frame1000003690"}
                                data-plasmic-override={
                                  overrides.frame1000003690
                                }
                                className={classNames(
                                  projectcss.all,
                                  sty.frame1000003690
                                )}
                              >
                                <div
                                  className={classNames(
                                    projectcss.all,
                                    projectcss.__wab_text,
                                    sty.text___7X3Vz
                                  )}
                                >
                                  {"Wind Direction"}
                                </div>
                              </div>
                              <div
                                data-plasmic-name={"frame1000003693"}
                                data-plasmic-override={
                                  overrides.frame1000003693
                                }
                                className={classNames(
                                  projectcss.all,
                                  sty.frame1000003693
                                )}
                              >
                                <div
                                  data-plasmic-name={"_212Kmh"}
                                  data-plasmic-override={overrides._212Kmh}
                                  className={classNames(
                                    projectcss.all,
                                    sty._212Kmh
                                  )}
                                >
                                  <div
                                    className={classNames(
                                      projectcss.all,
                                      projectcss.__wab_text,
                                      sty.text__wkUxk
                                    )}
                                  >
                                    {"212km/h"}
                                  </div>
                                </div>
                                <div
                                  data-plasmic-name={"todaysWindSpeed"}
                                  data-plasmic-override={
                                    overrides.todaysWindSpeed
                                  }
                                  className={classNames(
                                    projectcss.all,
                                    sty.todaysWindSpeed
                                  )}
                                >
                                  <div
                                    className={classNames(
                                      projectcss.all,
                                      projectcss.__wab_text,
                                      sty.text__hl4Mp
                                    )}
                                  >
                                    {"Today\u2019s Wind Speed"}
                                  </div>
                                </div>
                              </div>
                            </p.Stack>
                            <div
                              data-plasmic-name={"group1000003668"}
                              data-plasmic-override={overrides.group1000003668}
                              className={classNames(
                                projectcss.all,
                                sty.group1000003668
                              )}
                            >
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__swPGg
                                )}
                              >
                                {"N"}
                              </div>
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__nqydW
                                )}
                              >
                                {"W"}
                              </div>
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__jgRc
                                )}
                              >
                                {"E"}
                              </div>
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__e8Hs
                                )}
                              >
                                {"S"}
                              </div>
                              <Ellipse135Icon
                                className={classNames(
                                  projectcss.all,
                                  sty.svg__uvN8B
                                )}
                                role={"img"}
                              />

                              <Vector17Icon
                                className={classNames(
                                  projectcss.all,
                                  sty.svg___72F2A
                                )}
                                role={"img"}
                              />

                              <Ellipse136Icon
                                className={classNames(
                                  projectcss.all,
                                  sty.svg__ukEyW
                                )}
                                role={"img"}
                              />
                            </div>
                          </p.Stack>
                          <p.Stack
                            as={"div"}
                            data-plasmic-name={"frame1000003697"}
                            data-plasmic-override={overrides.frame1000003697}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              sty.frame1000003697
                            )}
                          >
                            <p.Stack
                              as={"div"}
                              data-plasmic-name={"frame1000003698"}
                              data-plasmic-override={overrides.frame1000003698}
                              hasGap={true}
                              className={classNames(
                                projectcss.all,
                                sty.frame1000003698
                              )}
                            >
                              <div
                                data-plasmic-name={"frame1000003699"}
                                data-plasmic-override={
                                  overrides.frame1000003699
                                }
                                className={classNames(
                                  projectcss.all,
                                  sty.frame1000003699
                                )}
                              >
                                <div
                                  className={classNames(
                                    projectcss.all,
                                    projectcss.__wab_text,
                                    sty.text___0Dm3Q
                                  )}
                                >
                                  {"Air Quality"}
                                </div>
                              </div>
                              <div
                                data-plasmic-name={"frame1000003700"}
                                data-plasmic-override={
                                  overrides.frame1000003700
                                }
                                className={classNames(
                                  projectcss.all,
                                  sty.frame1000003700
                                )}
                              >
                                <div
                                  data-plasmic-name={"_310"}
                                  data-plasmic-override={overrides._310}
                                  className={classNames(
                                    projectcss.all,
                                    sty._310
                                  )}
                                >
                                  <div
                                    className={classNames(
                                      projectcss.all,
                                      projectcss.__wab_text,
                                      sty.text__lPy2U
                                    )}
                                  >
                                    {"3/10"}
                                  </div>
                                </div>
                                <div
                                  data-plasmic-name={"moderateQuality"}
                                  data-plasmic-override={
                                    overrides.moderateQuality
                                  }
                                  className={classNames(
                                    projectcss.all,
                                    sty.moderateQuality
                                  )}
                                >
                                  <div
                                    className={classNames(
                                      projectcss.all,
                                      projectcss.__wab_text,
                                      sty.text__wtpbe
                                    )}
                                  >
                                    {"Moderate Quality"}
                                  </div>
                                </div>
                              </div>
                            </p.Stack>
                            <div
                              data-plasmic-name={"group716"}
                              data-plasmic-override={overrides.group716}
                              className={classNames(
                                projectcss.all,
                                sty.group716
                              )}
                            >
                              <p.PlasmicImg
                                alt={""}
                                className={classNames(sty.img__qYjm7)}
                                displayHeight={"49px" as const}
                                displayMaxHeight={"none" as const}
                                displayMaxWidth={"100%" as const}
                                displayMinHeight={"0" as const}
                                displayMinWidth={"0" as const}
                                displayWidth={"120px" as const}
                                loading={"lazy" as const}
                                src={{
                                  src: ellipse36KZfgoZ2,
                                  fullWidth: 120,
                                  fullHeight: 49,
                                  aspectRatio: 2.44898
                                }}
                              />

                              <Ellipse37Icon
                                className={classNames(
                                  projectcss.all,
                                  sty.svg__gIeWl
                                )}
                                role={"img"}
                              />

                              <p.Stack
                                as={"div"}
                                data-plasmic-name={"frame1000003701"}
                                data-plasmic-override={
                                  overrides.frame1000003701
                                }
                                hasGap={true}
                                className={classNames(
                                  projectcss.all,
                                  sty.frame1000003701
                                )}
                              >
                                <div
                                  className={classNames(
                                    projectcss.all,
                                    projectcss.__wab_text,
                                    sty.text__u4Ias
                                  )}
                                >
                                  {"Moderate"}
                                </div>
                              </p.Stack>
                            </div>
                          </p.Stack>
                        </p.Stack>
                      </p.Stack>
                      <p.Stack
                        as={"div"}
                        data-plasmic-name={"frame1000003702"}
                        data-plasmic-override={overrides.frame1000003702}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.frame1000003702
                        )}
                      >
                        <p.Stack
                          as={"div"}
                          data-plasmic-name={"frame1000003703"}
                          data-plasmic-override={overrides.frame1000003703}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.frame1000003703
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__fwW0
                            )}
                          >
                            {"26\u00b0C"}
                          </div>
                          <VectorIcon
                            className={classNames(
                              projectcss.all,
                              sty.svg__edfh0
                            )}
                            role={"img"}
                          />

                          <div
                            data-plasmic-name={"frame1000003704"}
                            data-plasmic-override={overrides.frame1000003704}
                            className={classNames(
                              projectcss.all,
                              sty.frame1000003704
                            )}
                          >
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text___68Rdg
                              )}
                            >
                              {"Mon"}
                            </div>
                          </div>
                        </p.Stack>
                        <p.Stack
                          as={"div"}
                          data-plasmic-name={"frame1000003705"}
                          data-plasmic-override={overrides.frame1000003705}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.frame1000003705
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__aJl85
                            )}
                          >
                            {"25\u00b0C"}
                          </div>
                          <VectorIcon
                            className={classNames(
                              projectcss.all,
                              sty.svg__vsEb
                            )}
                            role={"img"}
                          />

                          <div
                            data-plasmic-name={"frame1000003706"}
                            data-plasmic-override={overrides.frame1000003706}
                            className={classNames(
                              projectcss.all,
                              sty.frame1000003706
                            )}
                          >
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__jZ1P
                              )}
                            >
                              {"Tue"}
                            </div>
                          </div>
                        </p.Stack>
                        <p.Stack
                          as={"div"}
                          data-plasmic-name={"frame1000003707"}
                          data-plasmic-override={overrides.frame1000003707}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.frame1000003707
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text___5V5OS
                            )}
                          >
                            {"26\u00b0C"}
                          </div>
                          <div
                            data-plasmic-name={"group1000003661"}
                            data-plasmic-override={overrides.group1000003661}
                            className={classNames(
                              projectcss.all,
                              sty.group1000003661
                            )}
                          >
                            <Vector2Icon
                              className={classNames(
                                projectcss.all,
                                sty.svg__hPlui
                              )}
                              role={"img"}
                            />

                            <Group17Icon
                              className={classNames(
                                projectcss.all,
                                sty.svg__sKlw1
                              )}
                              role={"img"}
                            />
                          </div>
                          <div
                            data-plasmic-name={"frame1000003708"}
                            data-plasmic-override={overrides.frame1000003708}
                            className={classNames(
                              projectcss.all,
                              sty.frame1000003708
                            )}
                          >
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__zkoag
                              )}
                            >
                              {"Wed"}
                            </div>
                          </div>
                        </p.Stack>
                        <p.Stack
                          as={"div"}
                          data-plasmic-name={"frame1000003709"}
                          data-plasmic-override={overrides.frame1000003709}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.frame1000003709
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__xjFtM
                            )}
                          >
                            {"25\u00b0C"}
                          </div>
                          <div
                            data-plasmic-name={"group1000003660"}
                            data-plasmic-override={overrides.group1000003660}
                            className={classNames(
                              projectcss.all,
                              sty.group1000003660
                            )}
                          >
                            <Group35Icon
                              className={classNames(
                                projectcss.all,
                                sty.svg__aELb2
                              )}
                              role={"img"}
                            />

                            <Star25Icon
                              className={classNames(
                                projectcss.all,
                                sty.svg__yYmd1
                              )}
                              role={"img"}
                            />

                            <Star26Icon
                              className={classNames(
                                projectcss.all,
                                sty.svg__tPA0
                              )}
                              role={"img"}
                            />

                            <Star26Icon
                              className={classNames(
                                projectcss.all,
                                sty.svg__oc6JS
                              )}
                              role={"img"}
                            />

                            <Star26Icon
                              className={classNames(
                                projectcss.all,
                                sty.svg___1JvAq
                              )}
                              role={"img"}
                            />

                            <Star29Icon
                              className={classNames(
                                projectcss.all,
                                sty.svg__zfm6F
                              )}
                              role={"img"}
                            />

                            <Star26Icon
                              className={classNames(
                                projectcss.all,
                                sty.svg__mD4G
                              )}
                              role={"img"}
                            />
                          </div>
                          <div
                            data-plasmic-name={"frame1000003710"}
                            data-plasmic-override={overrides.frame1000003710}
                            className={classNames(
                              projectcss.all,
                              sty.frame1000003710
                            )}
                          >
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__uHiOq
                              )}
                            >
                              {"Thu"}
                            </div>
                          </div>
                        </p.Stack>
                        <p.Stack
                          as={"div"}
                          data-plasmic-name={"frame1000003711"}
                          data-plasmic-override={overrides.frame1000003711}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.frame1000003711
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__vC5Nf
                            )}
                          >
                            {"25\u00b0C"}
                          </div>
                          <p.PlasmicImg
                            alt={""}
                            className={classNames(sty.img__yOhFh)}
                            displayHeight={"30.25px" as const}
                            displayMaxHeight={"none" as const}
                            displayMaxWidth={"100%" as const}
                            displayMinHeight={"0" as const}
                            displayMinWidth={"0" as const}
                            displayWidth={"41.307px" as const}
                            loading={"lazy" as const}
                            src={{
                              src: group1000003662EyW87TmoKkU,
                              fullWidth: 41.307,
                              fullHeight: 30.25,
                              aspectRatio: 1.354839
                            }}
                          />

                          <div
                            data-plasmic-name={"frame1000003712"}
                            data-plasmic-override={overrides.frame1000003712}
                            className={classNames(
                              projectcss.all,
                              sty.frame1000003712
                            )}
                          >
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__gOnM
                              )}
                            >
                              {"Fri"}
                            </div>
                          </div>
                        </p.Stack>
                      </p.Stack>
                    </p.Stack>
                  </p.Stack>
                </p.Stack>
              </div>
            </div>
          </div>
          <div
            data-plasmic-name={"frame1000003689"}
            data-plasmic-override={overrides.frame1000003689}
            className={classNames(projectcss.all, sty.frame1000003689)}
          >
            <p.Stack
              as={"div"}
              data-plasmic-name={"frame1000003688"}
              data-plasmic-override={overrides.frame1000003688}
              hasGap={true}
              className={classNames(projectcss.all, sty.frame1000003688)}
            >
              <p.Stack
                as={"div"}
                data-plasmic-name={"frame1000003687"}
                data-plasmic-override={overrides.frame1000003687}
                hasGap={true}
                className={classNames(projectcss.all, sty.frame1000003687)}
              >
                <div
                  data-plasmic-name={"logo"}
                  data-plasmic-override={overrides.logo}
                  className={classNames(projectcss.all, sty.logo)}
                >
                  <div
                    data-plasmic-name={"group1000003670"}
                    data-plasmic-override={overrides.group1000003670}
                    className={classNames(projectcss.all, sty.group1000003670)}
                  >
                    <div
                      data-plasmic-name={"image"}
                      data-plasmic-override={overrides.image}
                      className={classNames(projectcss.all, sty.image)}
                    />

                    <div
                      data-plasmic-name={"image2"}
                      data-plasmic-override={overrides.image2}
                      className={classNames(projectcss.all, sty.image2)}
                    />

                    <p.PlasmicImg
                      alt={""}
                      className={classNames(sty.img__ch0SK)}
                      displayHeight={"56px" as const}
                      displayMaxHeight={"none" as const}
                      displayMaxWidth={"100%" as const}
                      displayMinHeight={"0" as const}
                      displayMinWidth={"0" as const}
                      displayWidth={"56px" as const}
                      loading={"lazy" as const}
                      src={{
                        src: aaaa1ZvJdqMChi4,
                        fullWidth: 56,
                        fullHeight: 56,
                        aspectRatio: 1
                      }}
                    />
                  </div>
                  {false ? (
                    <div
                      data-plasmic-name={"group1000003663"}
                      data-plasmic-override={overrides.group1000003663}
                      className={classNames(
                        projectcss.all,
                        sty.group1000003663
                      )}
                    >
                      <div
                        data-plasmic-name={"image3"}
                        data-plasmic-override={overrides.image3}
                        className={classNames(projectcss.all, sty.image3)}
                      />

                      <div
                        data-plasmic-name={"image4"}
                        data-plasmic-override={overrides.image4}
                        className={classNames(projectcss.all, sty.image4)}
                      />

                      <p.PlasmicImg
                        alt={""}
                        className={classNames(sty.img__hyjK)}
                        displayHeight={"56px" as const}
                        displayMaxHeight={"none" as const}
                        displayMaxWidth={"100%" as const}
                        displayMinHeight={"0" as const}
                        displayMinWidth={"0" as const}
                        displayWidth={"56px" as const}
                        loading={"lazy" as const}
                        src={{
                          src: aaaa12W8DDkZGazY,
                          fullWidth: 56,
                          fullHeight: 56,
                          aspectRatio: 1
                        }}
                      />
                    </div>
                  ) : null}
                </div>
                <p.Stack
                  as={"div"}
                  data-plasmic-name={"frame1000003686"}
                  data-plasmic-override={overrides.frame1000003686}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.frame1000003686)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__pejj3
                    )}
                  >
                    {"Monday"}
                  </div>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__u88H
                    )}
                  >
                    {"14th Mar 22"}
                  </div>
                </p.Stack>
                <div
                  data-plasmic-name={"group693"}
                  data-plasmic-override={overrides.group693}
                  className={classNames(projectcss.all, sty.group693)}
                >
                  <div
                    data-plasmic-name={"frame1000003685"}
                    data-plasmic-override={overrides.frame1000003685}
                    className={classNames(projectcss.all, sty.frame1000003685)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__crOds
                      )}
                    >
                      {"26"}
                    </div>
                    <div
                      data-plasmic-name={"group692"}
                      data-plasmic-override={overrides.group692}
                      className={classNames(projectcss.all, sty.group692)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text___4YUB
                        )}
                      >
                        {"0"}
                      </div>
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__kANi
                        )}
                      >
                        {"C"}
                      </div>
                    </div>
                  </div>
                </div>
              </p.Stack>
            </p.Stack>
            <p.Stack
              as={"div"}
              data-plasmic-name={"frame1000003670"}
              data-plasmic-override={overrides.frame1000003670}
              hasGap={true}
              className={classNames(projectcss.all, sty.frame1000003670)}
            >
              <div
                data-plasmic-name={"group704"}
                data-plasmic-override={overrides.group704}
                className={classNames(projectcss.all, sty.group704)}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__qmMef
                  )}
                >
                  {"Denver, CO"}
                </div>
              </div>
            </p.Stack>
          </div>
        </div>
      </div>
    </React.Fragment>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  root: [
    "root",
    "concept1Sunset",
    "frame1000003696",
    "component1",
    "frame1000003671",
    "frame1000003672",
    "frame1000003695",
    "frame1000003694",
    "frame1000003691",
    "frame1000003669",
    "frame1000003668",
    "frame1000003673",
    "frame1000003674",
    "frame1000003675",
    "frame1000003676",
    "frame1000003677",
    "frame1000003678",
    "frame1000003692",
    "frame1000003682",
    "frame1000003679",
    "frame1000003667",
    "frame1000003680",
    "_2",
    "todaysUvIndex",
    "frame1000003681",
    "group1000003667",
    "frame1000003683",
    "frame1000003684",
    "frame1000003690",
    "frame1000003693",
    "_212Kmh",
    "todaysWindSpeed",
    "group1000003668",
    "frame1000003697",
    "frame1000003698",
    "frame1000003699",
    "frame1000003700",
    "_310",
    "moderateQuality",
    "group716",
    "frame1000003701",
    "frame1000003702",
    "frame1000003703",
    "frame1000003704",
    "frame1000003705",
    "frame1000003706",
    "frame1000003707",
    "group1000003661",
    "frame1000003708",
    "frame1000003709",
    "group1000003660",
    "frame1000003710",
    "frame1000003711",
    "frame1000003712",
    "frame1000003689",
    "frame1000003688",
    "frame1000003687",
    "logo",
    "group1000003670",
    "image",
    "image2",
    "group1000003663",
    "image3",
    "image4",
    "frame1000003686",
    "group693",
    "frame1000003685",
    "group692",
    "frame1000003670",
    "group704"
  ],
  concept1Sunset: [
    "concept1Sunset",
    "frame1000003696",
    "component1",
    "frame1000003671",
    "frame1000003672",
    "frame1000003695",
    "frame1000003694",
    "frame1000003691",
    "frame1000003669",
    "frame1000003668",
    "frame1000003673",
    "frame1000003674",
    "frame1000003675",
    "frame1000003676",
    "frame1000003677",
    "frame1000003678",
    "frame1000003692",
    "frame1000003682",
    "frame1000003679",
    "frame1000003667",
    "frame1000003680",
    "_2",
    "todaysUvIndex",
    "frame1000003681",
    "group1000003667",
    "frame1000003683",
    "frame1000003684",
    "frame1000003690",
    "frame1000003693",
    "_212Kmh",
    "todaysWindSpeed",
    "group1000003668",
    "frame1000003697",
    "frame1000003698",
    "frame1000003699",
    "frame1000003700",
    "_310",
    "moderateQuality",
    "group716",
    "frame1000003701",
    "frame1000003702",
    "frame1000003703",
    "frame1000003704",
    "frame1000003705",
    "frame1000003706",
    "frame1000003707",
    "group1000003661",
    "frame1000003708",
    "frame1000003709",
    "group1000003660",
    "frame1000003710",
    "frame1000003711",
    "frame1000003712"
  ],
  frame1000003696: [
    "frame1000003696",
    "component1",
    "frame1000003671",
    "frame1000003672",
    "frame1000003695",
    "frame1000003694",
    "frame1000003691",
    "frame1000003669",
    "frame1000003668",
    "frame1000003673",
    "frame1000003674",
    "frame1000003675",
    "frame1000003676",
    "frame1000003677",
    "frame1000003678",
    "frame1000003692",
    "frame1000003682",
    "frame1000003679",
    "frame1000003667",
    "frame1000003680",
    "_2",
    "todaysUvIndex",
    "frame1000003681",
    "group1000003667",
    "frame1000003683",
    "frame1000003684",
    "frame1000003690",
    "frame1000003693",
    "_212Kmh",
    "todaysWindSpeed",
    "group1000003668",
    "frame1000003697",
    "frame1000003698",
    "frame1000003699",
    "frame1000003700",
    "_310",
    "moderateQuality",
    "group716",
    "frame1000003701",
    "frame1000003702",
    "frame1000003703",
    "frame1000003704",
    "frame1000003705",
    "frame1000003706",
    "frame1000003707",
    "group1000003661",
    "frame1000003708",
    "frame1000003709",
    "group1000003660",
    "frame1000003710",
    "frame1000003711",
    "frame1000003712"
  ],
  component1: [
    "component1",
    "frame1000003671",
    "frame1000003672",
    "frame1000003695",
    "frame1000003694",
    "frame1000003691",
    "frame1000003669",
    "frame1000003668",
    "frame1000003673",
    "frame1000003674",
    "frame1000003675",
    "frame1000003676",
    "frame1000003677",
    "frame1000003678",
    "frame1000003692",
    "frame1000003682",
    "frame1000003679",
    "frame1000003667",
    "frame1000003680",
    "_2",
    "todaysUvIndex",
    "frame1000003681",
    "group1000003667",
    "frame1000003683",
    "frame1000003684",
    "frame1000003690",
    "frame1000003693",
    "_212Kmh",
    "todaysWindSpeed",
    "group1000003668",
    "frame1000003697",
    "frame1000003698",
    "frame1000003699",
    "frame1000003700",
    "_310",
    "moderateQuality",
    "group716",
    "frame1000003701",
    "frame1000003702",
    "frame1000003703",
    "frame1000003704",
    "frame1000003705",
    "frame1000003706",
    "frame1000003707",
    "group1000003661",
    "frame1000003708",
    "frame1000003709",
    "group1000003660",
    "frame1000003710",
    "frame1000003711",
    "frame1000003712"
  ],
  frame1000003671: [
    "frame1000003671",
    "frame1000003672",
    "frame1000003695",
    "frame1000003694",
    "frame1000003691",
    "frame1000003669",
    "frame1000003668",
    "frame1000003673",
    "frame1000003674",
    "frame1000003675",
    "frame1000003676",
    "frame1000003677",
    "frame1000003678",
    "frame1000003692",
    "frame1000003682",
    "frame1000003679",
    "frame1000003667",
    "frame1000003680",
    "_2",
    "todaysUvIndex",
    "frame1000003681",
    "group1000003667",
    "frame1000003683",
    "frame1000003684",
    "frame1000003690",
    "frame1000003693",
    "_212Kmh",
    "todaysWindSpeed",
    "group1000003668",
    "frame1000003697",
    "frame1000003698",
    "frame1000003699",
    "frame1000003700",
    "_310",
    "moderateQuality",
    "group716",
    "frame1000003701",
    "frame1000003702",
    "frame1000003703",
    "frame1000003704",
    "frame1000003705",
    "frame1000003706",
    "frame1000003707",
    "group1000003661",
    "frame1000003708",
    "frame1000003709",
    "group1000003660",
    "frame1000003710",
    "frame1000003711",
    "frame1000003712"
  ],
  frame1000003672: [
    "frame1000003672",
    "frame1000003695",
    "frame1000003694",
    "frame1000003691",
    "frame1000003669",
    "frame1000003668",
    "frame1000003673",
    "frame1000003674",
    "frame1000003675",
    "frame1000003676",
    "frame1000003677",
    "frame1000003678",
    "frame1000003692",
    "frame1000003682",
    "frame1000003679",
    "frame1000003667",
    "frame1000003680",
    "_2",
    "todaysUvIndex",
    "frame1000003681",
    "group1000003667",
    "frame1000003683",
    "frame1000003684",
    "frame1000003690",
    "frame1000003693",
    "_212Kmh",
    "todaysWindSpeed",
    "group1000003668",
    "frame1000003697",
    "frame1000003698",
    "frame1000003699",
    "frame1000003700",
    "_310",
    "moderateQuality",
    "group716",
    "frame1000003701",
    "frame1000003702",
    "frame1000003703",
    "frame1000003704",
    "frame1000003705",
    "frame1000003706",
    "frame1000003707",
    "group1000003661",
    "frame1000003708",
    "frame1000003709",
    "group1000003660",
    "frame1000003710",
    "frame1000003711",
    "frame1000003712"
  ],
  frame1000003695: [
    "frame1000003695",
    "frame1000003694",
    "frame1000003691",
    "frame1000003669",
    "frame1000003668",
    "frame1000003673",
    "frame1000003674",
    "frame1000003675",
    "frame1000003676",
    "frame1000003677",
    "frame1000003678",
    "frame1000003692",
    "frame1000003682",
    "frame1000003679",
    "frame1000003667",
    "frame1000003680",
    "_2",
    "todaysUvIndex",
    "frame1000003681",
    "group1000003667",
    "frame1000003683",
    "frame1000003684",
    "frame1000003690",
    "frame1000003693",
    "_212Kmh",
    "todaysWindSpeed",
    "group1000003668",
    "frame1000003697",
    "frame1000003698",
    "frame1000003699",
    "frame1000003700",
    "_310",
    "moderateQuality",
    "group716",
    "frame1000003701",
    "frame1000003702",
    "frame1000003703",
    "frame1000003704",
    "frame1000003705",
    "frame1000003706",
    "frame1000003707",
    "group1000003661",
    "frame1000003708",
    "frame1000003709",
    "group1000003660",
    "frame1000003710",
    "frame1000003711",
    "frame1000003712"
  ],
  frame1000003694: [
    "frame1000003694",
    "frame1000003691",
    "frame1000003669",
    "frame1000003668",
    "frame1000003673",
    "frame1000003674",
    "frame1000003675",
    "frame1000003676",
    "frame1000003677",
    "frame1000003678",
    "frame1000003692",
    "frame1000003682",
    "frame1000003679",
    "frame1000003667",
    "frame1000003680",
    "_2",
    "todaysUvIndex",
    "frame1000003681",
    "group1000003667",
    "frame1000003683",
    "frame1000003684",
    "frame1000003690",
    "frame1000003693",
    "_212Kmh",
    "todaysWindSpeed",
    "group1000003668",
    "frame1000003697",
    "frame1000003698",
    "frame1000003699",
    "frame1000003700",
    "_310",
    "moderateQuality",
    "group716",
    "frame1000003701"
  ],
  frame1000003691: [
    "frame1000003691",
    "frame1000003669",
    "frame1000003668",
    "frame1000003673",
    "frame1000003674",
    "frame1000003675",
    "frame1000003676",
    "frame1000003677",
    "frame1000003678"
  ],
  frame1000003669: ["frame1000003669", "frame1000003668"],
  frame1000003668: ["frame1000003668"],
  frame1000003673: ["frame1000003673", "frame1000003674"],
  frame1000003674: ["frame1000003674"],
  frame1000003675: ["frame1000003675", "frame1000003676"],
  frame1000003676: ["frame1000003676"],
  frame1000003677: ["frame1000003677", "frame1000003678"],
  frame1000003678: ["frame1000003678"],
  frame1000003692: [
    "frame1000003692",
    "frame1000003682",
    "frame1000003679",
    "frame1000003667",
    "frame1000003680",
    "_2",
    "todaysUvIndex",
    "frame1000003681",
    "group1000003667",
    "frame1000003683",
    "frame1000003684",
    "frame1000003690",
    "frame1000003693",
    "_212Kmh",
    "todaysWindSpeed",
    "group1000003668",
    "frame1000003697",
    "frame1000003698",
    "frame1000003699",
    "frame1000003700",
    "_310",
    "moderateQuality",
    "group716",
    "frame1000003701"
  ],
  frame1000003682: [
    "frame1000003682",
    "frame1000003679",
    "frame1000003667",
    "frame1000003680",
    "_2",
    "todaysUvIndex",
    "frame1000003681",
    "group1000003667"
  ],
  frame1000003679: [
    "frame1000003679",
    "frame1000003667",
    "frame1000003680",
    "_2",
    "todaysUvIndex"
  ],
  frame1000003667: ["frame1000003667"],
  frame1000003680: ["frame1000003680", "_2", "todaysUvIndex"],
  _2: ["_2"],
  todaysUvIndex: ["todaysUvIndex"],
  frame1000003681: ["frame1000003681", "group1000003667"],
  group1000003667: ["group1000003667"],
  frame1000003683: [
    "frame1000003683",
    "frame1000003684",
    "frame1000003690",
    "frame1000003693",
    "_212Kmh",
    "todaysWindSpeed",
    "group1000003668"
  ],
  frame1000003684: [
    "frame1000003684",
    "frame1000003690",
    "frame1000003693",
    "_212Kmh",
    "todaysWindSpeed"
  ],
  frame1000003690: ["frame1000003690"],
  frame1000003693: ["frame1000003693", "_212Kmh", "todaysWindSpeed"],
  _212Kmh: ["_212Kmh"],
  todaysWindSpeed: ["todaysWindSpeed"],
  group1000003668: ["group1000003668"],
  frame1000003697: [
    "frame1000003697",
    "frame1000003698",
    "frame1000003699",
    "frame1000003700",
    "_310",
    "moderateQuality",
    "group716",
    "frame1000003701"
  ],
  frame1000003698: [
    "frame1000003698",
    "frame1000003699",
    "frame1000003700",
    "_310",
    "moderateQuality"
  ],
  frame1000003699: ["frame1000003699"],
  frame1000003700: ["frame1000003700", "_310", "moderateQuality"],
  _310: ["_310"],
  moderateQuality: ["moderateQuality"],
  group716: ["group716", "frame1000003701"],
  frame1000003701: ["frame1000003701"],
  frame1000003702: [
    "frame1000003702",
    "frame1000003703",
    "frame1000003704",
    "frame1000003705",
    "frame1000003706",
    "frame1000003707",
    "group1000003661",
    "frame1000003708",
    "frame1000003709",
    "group1000003660",
    "frame1000003710",
    "frame1000003711",
    "frame1000003712"
  ],
  frame1000003703: ["frame1000003703", "frame1000003704"],
  frame1000003704: ["frame1000003704"],
  frame1000003705: ["frame1000003705", "frame1000003706"],
  frame1000003706: ["frame1000003706"],
  frame1000003707: ["frame1000003707", "group1000003661", "frame1000003708"],
  group1000003661: ["group1000003661"],
  frame1000003708: ["frame1000003708"],
  frame1000003709: ["frame1000003709", "group1000003660", "frame1000003710"],
  group1000003660: ["group1000003660"],
  frame1000003710: ["frame1000003710"],
  frame1000003711: ["frame1000003711", "frame1000003712"],
  frame1000003712: ["frame1000003712"],
  frame1000003689: [
    "frame1000003689",
    "frame1000003688",
    "frame1000003687",
    "logo",
    "group1000003670",
    "image",
    "image2",
    "group1000003663",
    "image3",
    "image4",
    "frame1000003686",
    "group693",
    "frame1000003685",
    "group692",
    "frame1000003670",
    "group704"
  ],
  frame1000003688: [
    "frame1000003688",
    "frame1000003687",
    "logo",
    "group1000003670",
    "image",
    "image2",
    "group1000003663",
    "image3",
    "image4",
    "frame1000003686",
    "group693",
    "frame1000003685",
    "group692"
  ],
  frame1000003687: [
    "frame1000003687",
    "logo",
    "group1000003670",
    "image",
    "image2",
    "group1000003663",
    "image3",
    "image4",
    "frame1000003686",
    "group693",
    "frame1000003685",
    "group692"
  ],
  logo: [
    "logo",
    "group1000003670",
    "image",
    "image2",
    "group1000003663",
    "image3",
    "image4"
  ],
  group1000003670: ["group1000003670", "image", "image2"],
  image: ["image"],
  image2: ["image2"],
  group1000003663: ["group1000003663", "image3", "image4"],
  image3: ["image3"],
  image4: ["image4"],
  frame1000003686: ["frame1000003686"],
  group693: ["group693", "frame1000003685", "group692"],
  frame1000003685: ["frame1000003685", "group692"],
  group692: ["group692"],
  frame1000003670: ["frame1000003670", "group704"],
  group704: ["group704"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  typeof PlasmicDescendants[T][number];
type NodeDefaultElementType = {
  root: "div";
  concept1Sunset: "div";
  frame1000003696: "div";
  component1: "div";
  frame1000003671: "div";
  frame1000003672: "div";
  frame1000003695: "div";
  frame1000003694: "div";
  frame1000003691: "div";
  frame1000003669: "div";
  frame1000003668: "div";
  frame1000003673: "div";
  frame1000003674: "div";
  frame1000003675: "div";
  frame1000003676: "div";
  frame1000003677: "div";
  frame1000003678: "div";
  frame1000003692: "div";
  frame1000003682: "div";
  frame1000003679: "div";
  frame1000003667: "div";
  frame1000003680: "div";
  _2: "div";
  todaysUvIndex: "div";
  frame1000003681: "div";
  group1000003667: "div";
  frame1000003683: "div";
  frame1000003684: "div";
  frame1000003690: "div";
  frame1000003693: "div";
  _212Kmh: "div";
  todaysWindSpeed: "div";
  group1000003668: "div";
  frame1000003697: "div";
  frame1000003698: "div";
  frame1000003699: "div";
  frame1000003700: "div";
  _310: "div";
  moderateQuality: "div";
  group716: "div";
  frame1000003701: "div";
  frame1000003702: "div";
  frame1000003703: "div";
  frame1000003704: "div";
  frame1000003705: "div";
  frame1000003706: "div";
  frame1000003707: "div";
  group1000003661: "div";
  frame1000003708: "div";
  frame1000003709: "div";
  group1000003660: "div";
  frame1000003710: "div";
  frame1000003711: "div";
  frame1000003712: "div";
  frame1000003689: "div";
  frame1000003688: "div";
  frame1000003687: "div";
  logo: "div";
  group1000003670: "div";
  image: "div";
  image2: "div";
  group1000003663: "div";
  image3: "div";
  image4: "div";
  frame1000003686: "div";
  group693: "div";
  frame1000003685: "div";
  group692: "div";
  frame1000003670: "div";
  group704: "div";
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicHomepage__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicHomepage__VariantsArgs;
    args?: PlasmicHomepage__ArgsType;
    overrides?: NodeOverridesType<T>;
  } & Omit<PlasmicHomepage__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    /* Specify args directly as props*/ Omit<
      PlasmicHomepage__ArgsType,
      ReservedPropsType
    > &
    /* Specify overrides for each element directly as props*/ Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    /* Specify props for the root element*/ Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: [...PlasmicDescendants[nodeName]],
          internalArgPropNames: PlasmicHomepage__ArgProps,
          internalVariantPropNames: PlasmicHomepage__VariantProps
        }),
      [props, nodeName]
    );
    return PlasmicHomepage__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicHomepage";
  } else {
    func.displayName = `PlasmicHomepage.${nodeName}`;
  }
  return func;
}

export const PlasmicHomepage = Object.assign(
  // Top-level PlasmicHomepage renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    concept1Sunset: makeNodeComponent("concept1Sunset"),
    frame1000003696: makeNodeComponent("frame1000003696"),
    component1: makeNodeComponent("component1"),
    frame1000003671: makeNodeComponent("frame1000003671"),
    frame1000003672: makeNodeComponent("frame1000003672"),
    frame1000003695: makeNodeComponent("frame1000003695"),
    frame1000003694: makeNodeComponent("frame1000003694"),
    frame1000003691: makeNodeComponent("frame1000003691"),
    frame1000003669: makeNodeComponent("frame1000003669"),
    frame1000003668: makeNodeComponent("frame1000003668"),
    frame1000003673: makeNodeComponent("frame1000003673"),
    frame1000003674: makeNodeComponent("frame1000003674"),
    frame1000003675: makeNodeComponent("frame1000003675"),
    frame1000003676: makeNodeComponent("frame1000003676"),
    frame1000003677: makeNodeComponent("frame1000003677"),
    frame1000003678: makeNodeComponent("frame1000003678"),
    frame1000003692: makeNodeComponent("frame1000003692"),
    frame1000003682: makeNodeComponent("frame1000003682"),
    frame1000003679: makeNodeComponent("frame1000003679"),
    frame1000003667: makeNodeComponent("frame1000003667"),
    frame1000003680: makeNodeComponent("frame1000003680"),
    _2: makeNodeComponent("_2"),
    todaysUvIndex: makeNodeComponent("todaysUvIndex"),
    frame1000003681: makeNodeComponent("frame1000003681"),
    group1000003667: makeNodeComponent("group1000003667"),
    frame1000003683: makeNodeComponent("frame1000003683"),
    frame1000003684: makeNodeComponent("frame1000003684"),
    frame1000003690: makeNodeComponent("frame1000003690"),
    frame1000003693: makeNodeComponent("frame1000003693"),
    _212Kmh: makeNodeComponent("_212Kmh"),
    todaysWindSpeed: makeNodeComponent("todaysWindSpeed"),
    group1000003668: makeNodeComponent("group1000003668"),
    frame1000003697: makeNodeComponent("frame1000003697"),
    frame1000003698: makeNodeComponent("frame1000003698"),
    frame1000003699: makeNodeComponent("frame1000003699"),
    frame1000003700: makeNodeComponent("frame1000003700"),
    _310: makeNodeComponent("_310"),
    moderateQuality: makeNodeComponent("moderateQuality"),
    group716: makeNodeComponent("group716"),
    frame1000003701: makeNodeComponent("frame1000003701"),
    frame1000003702: makeNodeComponent("frame1000003702"),
    frame1000003703: makeNodeComponent("frame1000003703"),
    frame1000003704: makeNodeComponent("frame1000003704"),
    frame1000003705: makeNodeComponent("frame1000003705"),
    frame1000003706: makeNodeComponent("frame1000003706"),
    frame1000003707: makeNodeComponent("frame1000003707"),
    group1000003661: makeNodeComponent("group1000003661"),
    frame1000003708: makeNodeComponent("frame1000003708"),
    frame1000003709: makeNodeComponent("frame1000003709"),
    group1000003660: makeNodeComponent("group1000003660"),
    frame1000003710: makeNodeComponent("frame1000003710"),
    frame1000003711: makeNodeComponent("frame1000003711"),
    frame1000003712: makeNodeComponent("frame1000003712"),
    frame1000003689: makeNodeComponent("frame1000003689"),
    frame1000003688: makeNodeComponent("frame1000003688"),
    frame1000003687: makeNodeComponent("frame1000003687"),
    logo: makeNodeComponent("logo"),
    group1000003670: makeNodeComponent("group1000003670"),
    image: makeNodeComponent("image"),
    image2: makeNodeComponent("image2"),
    group1000003663: makeNodeComponent("group1000003663"),
    image3: makeNodeComponent("image3"),
    image4: makeNodeComponent("image4"),
    frame1000003686: makeNodeComponent("frame1000003686"),
    group693: makeNodeComponent("group693"),
    frame1000003685: makeNodeComponent("frame1000003685"),
    group692: makeNodeComponent("group692"),
    frame1000003670: makeNodeComponent("frame1000003670"),
    group704: makeNodeComponent("group704"),

    // Metadata about props expected for PlasmicHomepage
    internalVariantProps: PlasmicHomepage__VariantProps,
    internalArgProps: PlasmicHomepage__ArgProps,

    // Page metadata
    pageMetadata: {
      title: "",
      description: "",
      ogImageSrc: "",
      canonical: ""
    }
  }
);

export default PlasmicHomepage;
/* prettier-ignore-end */
